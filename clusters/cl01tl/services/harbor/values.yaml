harbor:
  expose:
    type: ingress
    ingress:
      hosts:
        core: harbor.alexlebens.net
      className: traefik
      labels:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        cert-manager.io/cluster-issuer: letsencrypt-issuer
  externalURL: https://harbor-cl01tl.boreal-beaufort.ts.net
  persistence:
    enabled: true
    resourcePolicy: "keep"
    persistentVolumeClaim:
      registry:
        storageClass: ceph-block-delete
        accessMode: ReadWriteOnce
        size: 20Gi
      jobservice:
        jobLog:
          storageClass: ceph-block-delete
          accessMode: ReadWriteOnce
          size: 5Gi
      redis:
        storageClass: ceph-block-delete
        accessMode: ReadWriteOnce
        size: 5Gi
      trivy:
        storageClass: ceph-block-delete
        accessMode: ReadWriteOnce
        size: 5Gi
    imageChartStorage:
      type: filesystem
      filesystem:
        rootdirectory: /storage
  existingSecretAdminPassword: harbor-secret
  existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD
  ipFamily:
    ipv6:
      enabled: false
    ipv4:
      enabled: true
  updateStrategy:
    type: Recreate
  existingSecretSecretKey: harbor-secret
  metrics:
    enabled: true
    core:
      path: /metrics
      port: 8001
    registry:
      path: /metrics
      port: 8001
    jobservice:
      path: /metrics
      port: 8001
    exporter:
      path: /metrics
      port: 8001
    serviceMonitor:
      enabled: true
  trace:
    enabled: false
  cache:
    enabled: false
  portal:
    image:
      repository: ghcr.io/goharbor/harbor-portal
      tag: v2.12.1
  core:
    image:
      repository: ghcr.io/goharbor/harbor-core
      tag: v2.12.2
    existingSecret: harbor-secret
  jobservice:
    image:
      repository: ghcr.io/goharbor/harbor-jobservice
      tag: v2.12.1
    existingSecret: harbor-secret
    existingSecretKey: JOBSERVICE_SECRET
  registry:
    registry:
      image:
        repository: ghcr.io/goharbor/registry-photon
        tag: v2.12.1
    controller:
      image:
        repository: ghcr.io/goharbor/harbor-registryctl
        tag: v2.12.1
    existingSecret: harbor-secret
    existingSecretKey: REGISTRY_HTTP_SECRET
    relativeurls: false
    credentials:
      existingSecret: harbor-secret
    upload_purging:
      enabled: true
      age: 168h
      interval: 24h
      dryrun: false
  trivy:
    enabled: false
  database:
    type: external
    external:
      host: harbor-postgresql-17-cluster-rw
      port: "5432"
      username: app
      coreDatabase: app
      existingSecret: harbor-postgresql-17-cluster-app
  redis:
    type: internal
    internal:
      image:
        repository: goharbor/redis-photon
        tag: v2.12.2
  exporter:
    image:
      repository: ghcr.io/goharbor/harbor-exporter
      tag: v2.12.1
postgres-17-cluster:
  mode: standalone
  cluster:
    walStorage:
      storageClass: local-path
    storage:
      storageClass: local-path
    monitoring:
      enabled: true
  backup:
    enabled: true
    endpointURL: https://nyc3.digitaloceanspaces.com
    destinationPath: s3://postgres-backups-ce540ddf106d186bbddca68a/cl01tl/harbor/harbor-postgresql-17-cluster
    endpointCredentials: harbor-postgresql-17-cluster-backup-secret
    backupIndex: 1
