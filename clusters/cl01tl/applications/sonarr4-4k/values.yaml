sonarr4-4k:
  controllers:
    main:
      type: deployment
      replicas: 0
      strategy: Recreate
      revisionHistoryLimit: 3
      pod:
        securityContext:
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
          supplementalGroups:
            - 44
            - 100
            - 109
            - 65539
      containers:
        main:
          image:
            repository: ghcr.io/onedr0p/sonarr
            tag: 4.0.11.2680
            pullPolicy: IfNotPresent
          env:
            - name: TZ
              value: US/Central
            - name: SONARR__POSTGRES_MAIN_DB
              value: sonarr-main
            - name: SONARR__POSTGRES_LOG_DB
              value: sonarr-log
            - name: SONARR__POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: sonarr4-4k-postgresql-17-cluster-app
                  key: host
            - name: SONARR__POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: sonarr4-4k-postgresql-17-cluster-app
                  key: port
            - name: SONARR__POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: sonarr4-4k-postgresql-17-cluster-app
                  key: username
            - name: SONARR__POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarr4-4k-postgresql-17-cluster-app
                  key: password
          probes:
            liveness:
              enabled: false
              custom: true
              spec:
                exec:
                  command:
                  - /usr/bin/env
                  - bash
                  - -c
                  - curl --fail localhost:8989/api/v1/system/status?apiKey=`IFS=\> && while
                    read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
                failureThreshold: 5
                initialDelaySeconds: 60
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
        metrics:
          image:
            repository: ghcr.io/onedr0p/exportarr
            tag: v2.0.1
            pullPolicy: IfNotPresent
          args: ["sonarr"]
          env:
            - name: URL
              value: http://localhost
            - name: CONFIG
              value: /config/config.xml
            - name: PORT
              value: 9794
            - name: ENABLE_ADDITIONAL_METRICS
              value: false
            - name: ENABLE_UNKNOWN_QUEUE_ITEMS
              value: false
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
    pgloader:
      type: deployment
      replicas: 1
      strategy: Recreate
      revisionHistoryLimit: 3
      containers:
        main:
          image:
            repository: ubuntu
            tag: latest
            pullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
  serviceAccount:
    create: true
  service:
    main:
      controller: main
      ports:
        http:
          port: 80
          targetPort: 8989
          protocol: HTTP
        metrics:
          port: 9794
          targetPort: 9794
          protocol: TCP
  ingress:
    tailscale:
      enabled: true
      className: tailscale
      hosts:
        - host: sonarr-4k-cl01tl
          paths:
            - path: /
              pathType: Prefix
              service:
                name: sonarr4-4k
                port: 80
      tls:
        - hosts:
            - sonarr-4k-cl01tl
  persistence:
    config:
      storageClass: ceph-block
      accessMode: ReadWriteOnce
      size: 20Gi
      retain: true
      advancedMounts:
        pgloader:
          main:
            - path: /config
              readOnly: false          
      #  main:
      #    main:
      #      - path: /config
      #        readOnly: false
      #    metrics:
      #      - path: /config
      #        readOnly: true
    media:
      existingClaim: sonarr4-4k-nfs-storage
      advancedMounts:
        main:
          main:
            - path: /mnt/store
              readOnly: false
postgres-17-cluster:
  mode: standalone
  cluster:
    image:
      repository: ghcr.io/cloudnative-pg/postgresql
      tag: "17.2-22"
    walStorage:
      storageClass: local-path
    storage:
      storageClass: local-path
    monitoring:
      enabled: true
  bootstrap:
    initdb:
      database: app
      owner: app
      postInitSQL:
        - CREATE DATABASE "sonarr-main" OWNER "app";
        - CREATE DATABASE "sonarr-log" OWNER "app";
  backup:
    enabled: false
    endpointURL: https://nyc3.digitaloceanspaces.com
    destinationPath: s3://postgres-backups-ce540ddf106d186bbddca68a/cl01tl/sonarr4-4k/sonarr4-4k-postgresql-17-cluster
    endpointCredentials: sonarr4-4k-postgresql-17-cluster-backup-secret
    backupIndex: 1
    retentionPolicy: "7d"
