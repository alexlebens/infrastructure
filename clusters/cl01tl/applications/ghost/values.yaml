ghost:
  image:
    registry: docker.io
    repository: bitnami/ghost
    tag: 5.82.11-debian-12-r0
  ghostUsername: user
  existingSecret: ghost-credentials-secret
  ghostEmail: alexanderlebens@gmail.com
  ghostBlogTitle: Alex Lebens
  ghostHost: blog.alexlebens.net
  ghostPath: /
  ghostSkipInstall: false
  replicaCount: 1
  resourcesPreset: "micro"
  service:
    type: ClusterIP
  persistence:
    enabled: true
    storageClass: ceph-block
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  mysql:
    enabled: false
  externalDatabase:
    host: ghost-mysql
    port: 3306
    user: ghost
    database: ghost
    existingSecret: ghost-mysql-credentials-secret
mysql-innodbcluster:    
  serverInstances: 3
  routerInstances: 1
  baseServerId: 1000
  logs:
    error:
      enabled: true
      collect: false
    general:
      enabled: true
      collect: false
    slowQuery:
      enabled: true
      longQueryTime: 2.5
  datadirVolumeClaimTemplate:
    accessModes: 
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
  backupProfiles:
    - name: dump-instance-profile
      dumpInstance:
        storage:
          s3:
            prefix: ghost/instance
            config: ghost-mysql-backup-credentials-secret
            bucketName: cl01tl-mysql-backups
            endpoint: https://s3.us-east-2.amazonaws.com
    - name: snapshot-profile
      snapshot:
        storage:
          s3:
            prefix: ghost/snapshot
            config: ghost-mysql-backup-credentials-secret
            bucketName: cl01tl-mysql-backups
            endpoint: https://s3.us-east-2.amazonaws.com
  backupSchedules:
    - name: dump-instance-schedule
      schedule: "0 0 * * SAT"
      timeZone: US/Central
      deleteBackupData: false
      backupProfileName: dump-instance-profile
      enabled: true
    - name: snapshot-schedule
      schedule: "0 0 * * *"
      timeZone: US/Central
      deleteBackupData: false
      backupProfileName: snapshot-profile
      enabled: true
cloudflared:
  global:
    nameOverride: cloudflared
  controllers:
    main:
      type: deployment
      strategy: Recreate
      containers:
        main:
          image:
            repository: cloudflare/cloudflared
            tag: "2024.5.0"
            pullPolicy: IfNotPresent
          args:
            - tunnel
            - --no-autoupdate
            - run
            - --token
            - $(CF_MANAGED_TUNNEL_TOKEN)
          env:
            - name: CF_MANAGED_TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: ghost-cloudflared-secret
                  key: cf-tunnel-token
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
