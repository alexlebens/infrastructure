lidarr:
  image:
    repository: ghcr.io/onedr0p/lidarr
    tag: "2.3.3.4204"
  env:
    TZ: US/Central
    LIDARR__POSTGRES_MAIN_DB: lidarr-main
    LIDARR__POSTGRES_LOG_DB: lidarr-log
    LIDARR__POSTGRES_HOST:
      valueFrom:
        secretKeyRef:
          name: lidarr2-postgresql-16-cluster-app
          key: host
    LIDARR__POSTGRES_PORT:
      valueFrom:
        secretKeyRef:
          name: lidarr2-postgresql-16-cluster-app
          key: port
    LIDARR__POSTGRES_USER:
      valueFrom:
        secretKeyRef:
          name: lidarr2-postgresql-16-cluster-app
          key: user
    LIDARR__POSTGRES_PASSWORD:
      valueFrom:
        secretKeyRef:
          name: lidarr2-postgresql-16-cluster-app
          key: password
  ingress:
    main:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        cert-manager.io/cluster-issuer: letsencrypt-issuer
      hosts:
        - host: lidarr.alexlebens.net
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: lidarr2-secret-tls
          hosts:
            - lidarr.alexlebens.net
  persistence:
    config:
      enabled: true
      mountPath: /config
      accessMode: ReadWriteOnce
      size: 5Gi
    media:
      enabled: true
      mountPath: /mnt/store
      type: pvc
      existingClaim: lidarr2-nfs-storage
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 2000
    fsGroupChangePolicy: "OnRootMismatch"
    supplementalGroups:
      - 44
      - 100
      - 109
      - 65539
  metrics:
    enabled: true
    prometheusRule:
      enabled: true
      rules:
        - alert: LidarrDown
          annotations:
            description: Lidarr service is down.
            summary: Lidarr is down.
          expr: |
            lidarr_system_status == 0
          for: 5m
          labels:
            severity: critical
    exporter:
      image:
        repository: ghcr.io/onedr0p/exportarr
        tag: v2.0.1
persistence:
  media:
    nfsPath: /volume2/Storage
    nfsServer: synologybond.alexlebens.net
postgres-16-cluster:
  mode: standalone
  cluster:
    walStorage:
      storageClass: local-path
    storage:
      storageClass: local-path
    monitoring:
      enabled: true
    initdb:
      postInitSQL:
        - CREATE DATABASE "lidarr-main" OWNER "app";
        - CREATE DATABASE "lidarr-log" OWNER "app";
  backup:
    enabled: true
    endpointURL: https://s3.us-east-2.amazonaws.com
    destinationPath: s3://cl01tl-postgresql-backups/lidarr2
    endpointCredentials: lidarr2-postgresql-16-cluster-backup-secret
    backupIndex: 1
    retentionPolicy: 14d
