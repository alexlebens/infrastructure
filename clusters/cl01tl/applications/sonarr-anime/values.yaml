sonarr-anime:
  controllers:
    main:
      type: deployment
      replicas: 1
      strategy: Recreate
      revisionHistoryLimit: 3
      pod:
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      containers:
        main:
          image:
            repository: ghcr.io/linuxserver/sonarr
            tag: 4.0.15@sha256:328d322af2bb8d7211a9c43a26ff5e658ba3e6f47a695e8fb9ff806bfeab0f04
            pullPolicy: IfNotPresent
          env:
            - name: TZ
              value: US/Central
            - name: PUID
              value: 1000
            - name: PGID
              value: 1000
          resources:
            requests:
              cpu: 10m
              memory: 256Mi
        metrics:
          image:
            repository: ghcr.io/onedr0p/exportarr
            tag: v2.3.0
            pullPolicy: IfNotPresent
          args: ["sonarr"]
          env:
            - name: URL
              value: http://localhost
            - name: CONFIG
              value: /config/config.xml
            - name: PORT
              value: 9794
            - name: ENABLE_ADDITIONAL_METRICS
              value: false
            - name: ENABLE_UNKNOWN_QUEUE_ITEMS
              value: false
          resources:
            requests:
              cpu: 10m
              memory: 256Mi
  service:
    main:
      controller: main
      ports:
        http:
          port: 80
          targetPort: 8989
          protocol: HTTP
        metrics:
          port: 9794
          targetPort: 9794
          protocol: TCP
  persistence:
    config:
      forceRename: sonarr-anime-config
      storageClass: ceph-block
      accessMode: ReadWriteOnce
      size: 20Gi
      retain: true
      advancedMounts:
        main:
          main:
            - path: /config
              readOnly: false
          metrics:
            - path: /config
              readOnly: true
    media:
      existingClaim: sonarr-anime-nfs-storage
      advancedMounts:
        main:
          main:
            - path: /mnt/store
              readOnly: false
postgres-17-cluster:
  nameOverride: sonarr4-anime-postgresql-17
  mode: recovery
  cluster:
    storage:
      storageClass: local-path
    walStorage:
      storageClass: local-path
    resources:
      requests:
        memory: 512Mi
    monitoring:
      enabled: true
      prometheusRule:
        enabled: true
    initdb:
      postInitSQL:
        - CREATE DATABASE "sonarr-main" OWNER "app";
        - CREATE DATABASE "sonarr-log" OWNER "app";
  recovery:
    method: objectStore
    objectStore:
      destinationPath: s3://postgres-backups-ce540ddf106d186bbddca68a/cl01tl/sonarr4-anime/sonarr4-anime-postgresql-17-cluster
      index: 3
      endpointCredentials: sonarr-anime-postgresql-17-cluster-backup-secret
  backup:
    objectStore:
      - name: external
        destinationPath: s3://postgres-backups-ce540ddf106d186bbddca68a/cl01tl/sonarr4-anime/sonarr4-anime-postgresql-17-cluster
        index: 3
        endpointCredentials: sonarr-anime-postgresql-17-cluster-backup-secret
        retentionPolicy: "2d"
    scheduledBackups:
      - name: daily-backup
        suspend: false
        schedule: "0 0 /6 * * *"
        backupName: external
